repositories {
    mavenCentral()
}

apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'eclipse'

group = "de.jcup.springboot.dependagen"
version = "0.1.1"

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

test {
    useJUnitPlatform()
}

eclipse {    
  classpath {
    // see https://docs.gradle.org/current/dsl/org.gradle.plugins.ide.eclipse.model.EclipseClasspath.html
    downloadSources = true
    downloadJavadoc = true
  }
} 

/* handle non existing source folders*/
def eclipseSourceFolders=[
    'src/main/java',
    'src/main/resources',
    'src/test/java',
    'src/test/resources'
];

task genVersion {
          
     doLast {
          // update version.txt if necessary
          def file = new File("$projectDir/src/main/resources","version.txt").text=project.version;
          logger.info("wrote to file:$file")
     }
         
         
}


tasks.eclipse.dependsOn << {
        
    for (String sourceFolder: eclipseSourceFolders){ 
        def resourceDir = new File(project.projectDir, sourceFolder)
        /* try to create folder when not existing */
        if( !resourceDir.exists() && ! resourceDir.mkdirs() ) {
            logger.info("Not able to create %1",resourceDir);
        }
    }
}
tasks.assemble.dependsOn(tasks.genVersion);

